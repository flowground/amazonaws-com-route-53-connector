{
    "title": "Amazon Route 53",
    "docsUrl": "https://docs.aws.amazon.com/route53/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/route53/2013-04-01/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://route53.amazonaws.com/",
                    "http://route53.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "GetAccountLimit": {
            "main": "./lib/actions/GetAccountLimit.js",
            "title": "GetAccountLimit",
            "description": "Gets the specified limit for the current account, for example, the maximum\nnumber of health checks that you can create using the account.\n\nFor the default limit, see Limits\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html] \nin the Amazon Route 53 Developer Guide. To request a higher limit, open a case\n[https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&limitType=service-code-route53]\n.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountLimit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChange": {
            "main": "./lib/actions/GetChange.js",
            "title": "GetChange",
            "description": "Returns the current status of a change batch request. The status is one of the\nfollowing values:\n\n *   PENDING indicates that the changes in this request have not propagated to\n   all Amazon Route 53 DNS servers. This is the initial status of all change\n   batch requests.\n   \n   \n *   INSYNC indicates that the changes have propagated to all Route 53 DNS\n   servers.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChange.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCheckerIpRanges": {
            "main": "./lib/actions/GetCheckerIpRanges.js",
            "title": "GetCheckerIpRanges",
            "description": "  GetCheckerIpRanges still works, but we recommend that you download\nip-ranges.json, which includes IP address ranges for all AWS services. For more\ninformation, see IP Address Ranges of Amazon Route 53 Servers\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/route-53-ip-addresses.html] \nin the Amazon Route 53 Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCheckerIpRanges.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListReusableDelegationSets": {
            "main": "./lib/actions/ListReusableDelegationSets.js",
            "title": "ListReusableDelegationSets",
            "description": "Retrieves a list of the reusable delegation sets that are associated with the current AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListReusableDelegationSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateReusableDelegationSet": {
            "main": "./lib/actions/CreateReusableDelegationSet.js",
            "title": "CreateReusableDelegationSet",
            "description": "Creates a delegation set (a group of four name servers) that can be reused by\nmultiple hosted zones. If a hosted zoned ID is specified, \nCreateReusableDelegationSet marks the delegation set associated with that zone\nas reusable.\n\nYou can't associate a reusable delegation set with a private hosted zone.\n\nFor information about using a reusable delegation set to configure white label\nname servers, see Configuring White Label Name Servers\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/white-label-name-servers.html]\n.\n\nThe process for migrating existing hosted zones to use a reusable delegation set\nis comparable to the process for configuring white label name servers. You need\nto perform the following steps:\n\n 1.  Create a reusable delegation set.\n    \n    \n 2.  Recreate hosted zones, and reduce the TTL to 60 seconds or less.\n    \n    \n 3.  Recreate resource record sets in the new hosted zones.\n    \n    \n 4.  Change the registrar's name servers to use the name servers for the new\n    hosted zones.\n    \n    \n 5.  Monitor traffic for the website or application.\n    \n    \n 6.  Change TTLs back to their original values.\n    \n    \n\nIf you want to migrate existing hosted zones to use a reusable delegation set,\nthe existing hosted zones can't use any of the name servers that are assigned to\nthe reusable delegation set. If one or more hosted zones do use one or more name\nservers that are assigned to the reusable delegation set, you can do one of the\nfollowing:\n\n *  For small numbers of hosted zones--up to a few hundred--it's relatively easy\n   to create reusable delegation sets until you get one that has four name\n   servers that don't overlap with any of the name servers in your hosted zones.\n   \n   \n *  For larger numbers of hosted zones, the easiest solution is to use more than\n   one reusable delegation set.\n   \n   \n *  For larger numbers of hosted zones, you can also migrate hosted zones that\n   have overlapping name servers to hosted zones that don't have overlapping\n   name servers, then migrate the hosted zones again to use the reusable\n   delegation set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateReusableDelegationSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteReusableDelegationSet": {
            "main": "./lib/actions/DeleteReusableDelegationSet.js",
            "title": "DeleteReusableDelegationSet",
            "description": "Deletes a reusable delegation set.\n\nYou can delete a reusable delegation set only if it isn't associated with any\nhosted zones.\n\nTo verify that the reusable delegation set is not associated with any hosted\nzones, submit a GetReusableDelegationSet request and specify the ID of the\nreusable delegation set that you want to delete.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteReusableDelegationSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReusableDelegationSet": {
            "main": "./lib/actions/GetReusableDelegationSet.js",
            "title": "GetReusableDelegationSet",
            "description": "Retrieves information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReusableDelegationSet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetGeoLocation": {
            "main": "./lib/actions/GetGeoLocation.js",
            "title": "GetGeoLocation",
            "description": "Gets information about whether a specified geographic location is supported for\nAmazon Route 53 geolocation resource record sets.\n\nUse the following syntax to determine whether a continent is supported for\ngeolocation:\n\n GET /2013-04-01/geolocation?continentcode=two-letter abbreviation for a\ncontinent \n\nUse the following syntax to determine whether a country is supported for\ngeolocation:\n\n GET /2013-04-01/geolocation?countrycode=two-character country code \n\nUse the following syntax to determine whether a subdivision of a country is\nsupported for geolocation:\n\n GET /2013-04-01/geolocation?countrycode=two-character country code\n&subdivisioncode=subdivision code",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetGeoLocation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListGeoLocations": {
            "main": "./lib/actions/ListGeoLocations.js",
            "title": "ListGeoLocations",
            "description": "Retrieves a list of supported geographic locations.\n\nCountries are listed first, and continents are listed last. If Amazon Route 53\nsupports subdivisions for a country (for example, states or provinces), the\nsubdivisions for that country are listed in alphabetical order immediately after\nthe corresponding country.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListGeoLocations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListHealthChecks": {
            "main": "./lib/actions/ListHealthChecks.js",
            "title": "ListHealthChecks",
            "description": "Retrieve a list of the health checks that are associated with the current AWS account. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListHealthChecks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateHealthCheck": {
            "main": "./lib/actions/CreateHealthCheck.js",
            "title": "CreateHealthCheck",
            "description": "Creates a new health check.\n\nFor information about adding health checks to resource record sets, see \nResourceRecordSet$HealthCheckId in ChangeResourceRecordSets. \n\n ELB Load Balancers \n\nIf you're registering EC2 instances with an Elastic Load Balancing (ELB) load\nbalancer, do not create Amazon Route 53 health checks for the EC2 instances.\nWhen you register an EC2 instance with a load balancer, you configure settings\nfor an ELB health check, which performs a similar function to a Route 53 health\ncheck.\n\n Private Hosted Zones \n\nYou can associate health checks with failover resource record sets in a private\nhosted zone. Note the following:\n\n *  Route 53 health checkers are outside the VPC. To check the health of an\n   endpoint within a VPC by IP address, you must assign a public IP address to\n   the instance in the VPC.\n   \n   \n *  You can configure a health checker to check the health of an external\n   resource that the instance relies on, such as a database server.\n   \n   \n *  You can create a CloudWatch metric, associate an alarm with the metric, and\n   then create a health check that is based on the state of the alarm. For\n   example, you might create a CloudWatch metric that checks the status of the\n   Amazon EC2 StatusCheckFailed metric, add an alarm to the metric, and then\n   create a health check that is based on the state of the alarm. For\n   information about creating CloudWatch metrics and alarms by using the\n   CloudWatch console, see the Amazon CloudWatch User Guide\n   [http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatch.html]\n   .",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateHealthCheck.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteHealthCheck": {
            "main": "./lib/actions/DeleteHealthCheck.js",
            "title": "DeleteHealthCheck",
            "description": "Deletes a health check.\n\nAmazon Route 53 does not prevent you from deleting a health check even if the\nhealth check is associated with one or more resource record sets. If you delete\na health check and you don't update the associated resource record sets, the\nfuture status of the health check can't be predicted and may change. This will\naffect the routing of DNS queries for your DNS failover configuration. For more\ninformation, see Replacing and Deleting Health Checks\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html#health-checks-deleting.html] \nin the Amazon Route 53 Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteHealthCheck.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHealthCheck": {
            "main": "./lib/actions/GetHealthCheck.js",
            "title": "GetHealthCheck",
            "description": "Gets information about a specified health check.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHealthCheck.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateHealthCheck": {
            "main": "./lib/actions/UpdateHealthCheck.js",
            "title": "UpdateHealthCheck",
            "description": "Updates an existing health check. Note that some values can't be updated. \n\nFor more information about updating health checks, see Creating, Updating, and\nDeleting Health Checks\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html] \nin the Amazon Route 53 Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateHealthCheck.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHealthCheckLastFailureReason": {
            "main": "./lib/actions/GetHealthCheckLastFailureReason.js",
            "title": "GetHealthCheckLastFailureReason",
            "description": "Gets the reason that a specified health check failed most recently.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHealthCheckLastFailureReason.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHealthCheckStatus": {
            "main": "./lib/actions/GetHealthCheckStatus.js",
            "title": "GetHealthCheckStatus",
            "description": "Gets status of a specified health check. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHealthCheckStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHealthCheckCount": {
            "main": "./lib/actions/GetHealthCheckCount.js",
            "title": "GetHealthCheckCount",
            "description": "Retrieves the number of health checks that are associated with the current AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHealthCheckCount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListHostedZones": {
            "main": "./lib/actions/ListHostedZones.js",
            "title": "ListHostedZones",
            "description": "Retrieves a list of the public and private hosted zones that are associated with\nthe current AWS account. The response includes a HostedZones child element for\neach hosted zone.\n\nAmazon Route 53 returns a maximum of 100 items in each response. If you have a\nlot of hosted zones, you can use the maxitems parameter to list them in groups\nof up to 100.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListHostedZones.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateHostedZone": {
            "main": "./lib/actions/CreateHostedZone.js",
            "title": "CreateHostedZone",
            "description": "Creates a new public or private hosted zone. You create records in a public\nhosted zone to define how you want to route traffic on the internet for a\ndomain, such as example.com, and its subdomains (apex.example.com,\nacme.example.com). You create records in a private hosted zone to define how you\nwant to route traffic for a domain and its subdomains within one or more Amazon\nVirtual Private Clouds (Amazon VPCs). \n\nYou can't convert a public hosted zone to a private hosted zone or vice versa.\nInstead, you must create a new hosted zone with the same name and create new\nresource record sets.\n\nFor more information about charges for hosted zones, see Amazon Route 53 Pricing\n[http://aws.amazon.com/route53/pricing/].\n\nNote the following:\n\n *  You can't create a hosted zone for a top-level domain (TLD) such as .com.\n   \n   \n *  For public hosted zones, Amazon Route 53 automatically creates a default SOA\n   record and four NS records for the zone. For more information about SOA and\n   NS records, see NS and SOA Records that Route 53 Creates for a Hosted Zone\n   [http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html] \n   in the Amazon Route 53 Developer Guide.\n   \n   If you want to use the same name servers for multiple public hosted zones,\n   you can optionally associate a reusable delegation set with the hosted zone.\n   See the DelegationSetId element.\n   \n   \n *  If your domain is registered with a registrar other than Route 53, you must\n   update the name servers with your registrar to make Route 53 the DNS service\n   for the domain. For more information, see Migrating DNS Service for an\n   Existing Domain to Amazon Route 53\n   [http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html] \n   in the Amazon Route 53 Developer Guide. \n   \n   \n\nWhen you submit a CreateHostedZone request, the initial status of the hosted\nzone is PENDING. For public hosted zones, this means that the NS and SOA records\nare not yet available on all Route 53 DNS servers. When the NS and SOA records\nare available, the status of the zone changes to INSYNC.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateHostedZone.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteHostedZone": {
            "main": "./lib/actions/DeleteHostedZone.js",
            "title": "DeleteHostedZone",
            "description": "Deletes a hosted zone.\n\nIf the name servers for the hosted zone are associated with a domain and if you\nwant to make the domain unavailable on the Internet, we recommend that you\ndelete the name servers from the domain to prevent future DNS queries from\npossibly being misrouted. If the domain is registered with Amazon Route 53, see \nUpdateDomainNameservers. If the domain is registered with another registrar, use\nthe method provided by the registrar to delete name servers for the domain.\n\nSome domain registries don't allow you to remove all of the name servers for a\ndomain. If the registry for your domain requires one or more name servers, we\nrecommend that you delete the hosted zone only if you transfer DNS service to\nanother service provider, and you replace the name servers for the domain with\nname servers from the new provider.\n\nYou can delete a hosted zone only if it contains only the default SOA record and\nNS resource record sets. If the hosted zone contains other resource record sets,\nyou must delete them before you can delete the hosted zone. If you try to delete\na hosted zone that contains other resource record sets, the request fails, and\nRoute 53 returns a HostedZoneNotEmpty error. For information about deleting\nrecords from your hosted zone, see ChangeResourceRecordSets.\n\nTo verify that the hosted zone has been deleted, do one of the following:\n\n *  Use the GetHostedZone action to request information about the hosted zone.\n   \n   \n *  Use the ListHostedZones action to get a list of the hosted zones associated\n   with the current AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteHostedZone.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHostedZone": {
            "main": "./lib/actions/GetHostedZone.js",
            "title": "GetHostedZone",
            "description": "Gets information about a specified hosted zone including the four name servers assigned to the hosted zone.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHostedZone.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateHostedZoneComment": {
            "main": "./lib/actions/UpdateHostedZoneComment.js",
            "title": "UpdateHostedZoneComment",
            "description": "Updates the comment for a specified hosted zone.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateHostedZoneComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssociateVPCWithHostedZone": {
            "main": "./lib/actions/AssociateVPCWithHostedZone.js",
            "title": "AssociateVPCWithHostedZone",
            "description": "Associates an Amazon VPC with a private hosted zone. \n\nTo perform the association, the VPC and the private hosted zone must already\nexist. You can't convert a public hosted zone into a private hosted zone.\n\nIf you want to associate a VPC that was created by using one AWS account with a\nprivate hosted zone that was created by using a different account, the AWS\naccount that created the private hosted zone must first submit a \nCreateVPCAssociationAuthorization request. Then the account that created the VPC\nmust submit an AssociateVPCWithHostedZone request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociateVPCWithHostedZone.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListVPCAssociationAuthorizations": {
            "main": "./lib/actions/ListVPCAssociationAuthorizations.js",
            "title": "ListVPCAssociationAuthorizations",
            "description": "Gets a list of the VPCs that were created by other accounts and that can be\nassociated with a specified hosted zone because you've submitted one or more \nCreateVPCAssociationAuthorization requests. \n\nThe response includes a VPCs element with a VPC child element for each VPC that\ncan be associated with the hosted zone.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListVPCAssociationAuthorizations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateVPCAssociationAuthorization": {
            "main": "./lib/actions/CreateVPCAssociationAuthorization.js",
            "title": "CreateVPCAssociationAuthorization",
            "description": "Authorizes the AWS account that created a specified VPC to submit an \nAssociateVPCWithHostedZone request to associate the VPC with a specified hosted\nzone that was created by a different account. To submit a \nCreateVPCAssociationAuthorization request, you must use the account that created\nthe hosted zone. After you authorize the association, use the account that\ncreated the VPC to submit an AssociateVPCWithHostedZone request.\n\nIf you want to associate multiple VPCs that you created by using one account\nwith a hosted zone that you created by using a different account, you must\nsubmit one authorization request for each VPC.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateVPCAssociationAuthorization.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteVPCAssociationAuthorization": {
            "main": "./lib/actions/DeleteVPCAssociationAuthorization.js",
            "title": "DeleteVPCAssociationAuthorization",
            "description": "Removes authorization to submit an AssociateVPCWithHostedZone request to\nassociate a specified VPC with a hosted zone that was created by a different\naccount. You must use the account that created the hosted zone to submit a \nDeleteVPCAssociationAuthorization request.\n\nSending this request only prevents the AWS account that created the VPC from\nassociating the VPC with the Amazon Route 53 hosted zone in the future. If the\nVPC is already associated with the hosted zone, \nDeleteVPCAssociationAuthorization won't disassociate the VPC from the hosted\nzone. If you want to delete an existing association, use \nDisassociateVPCFromHostedZone.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteVPCAssociationAuthorization.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociateVPCFromHostedZone": {
            "main": "./lib/actions/DisassociateVPCFromHostedZone.js",
            "title": "DisassociateVPCFromHostedZone",
            "description": "Disassociates a VPC from a Amazon Route 53 private hosted zone. Note the\nfollowing:\n\n *  You can't disassociate the last VPC from a private hosted zone.\n   \n   \n *  You can't convert a private hosted zone into a public hosted zone.\n   \n   \n *  You can submit a DisassociateVPCFromHostedZone request using either the\n   account that created the hosted zone or the account that created the VPC.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociateVPCFromHostedZone.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListResourceRecordSets": {
            "main": "./lib/actions/ListResourceRecordSets.js",
            "title": "ListResourceRecordSets",
            "description": "Lists the resource record sets in a specified hosted zone.\n\n ListResourceRecordSets returns up to 100 resource record sets at a time in\nASCII order, beginning at a position specified by the name and type elements.\n\n Sort order \n\n ListResourceRecordSets sorts results first by DNS name with the labels\nreversed, for example:\n\n com.example.www. \n\nNote the trailing dot, which can change the sort order when the record name\ncontains characters that appear before . (decimal 46) in the ASCII table. These\ncharacters include the following: ! \" # $ % & ' ( ) * + , - \n\nWhen multiple records have the same DNS name, ListResourceRecordSets sorts\nresults by the record type.\n\n Specifying where to start listing records \n\nYou can use the name and type elements to specify the resource record set that\nthe list begins with:\n\nIf you do not specify Name or Type The results begin with the first resource\nrecord set that the hosted zone contains.\n\nIf you specify Name but not Type The results begin with the first resource\nrecord set in the list whose name is greater than or equal to Name.\n\nIf you specify Type but not Name Amazon Route 53 returns the InvalidInput error.\n\nIf you specify both Name and Type The results begin with the first resource\nrecord set in the list whose name is greater than or equal to Name, and whose\ntype is greater than or equal to Type.\n\n Resource record sets that are PENDING \n\nThis action returns the most current version of the records. This includes\nrecords that are PENDING, and that are not yet available on all Route 53 DNS\nservers.\n\n Changing resource record sets \n\nTo ensure that you get an accurate listing of the resource record sets for a\nhosted zone at a point in time, do not submit a ChangeResourceRecordSets request\nwhile you're paging through the results of a ListResourceRecordSets request. If\nyou do, some pages may display results without the latest changes while other\npages display results with the latest changes.\n\n Displaying the next page of results \n\nIf a ListResourceRecordSets command returns more than one page of results, the\nvalue of IsTruncated is true. To display the next page of results, get the\nvalues of NextRecordName, NextRecordType, and NextRecordIdentifier (if any) from\nthe response. Then submit another ListResourceRecordSets request, and specify\nthose values for StartRecordName, StartRecordType, and StartRecordIdentifier.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListResourceRecordSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ChangeResourceRecordSets": {
            "main": "./lib/actions/ChangeResourceRecordSets.js",
            "title": "ChangeResourceRecordSets",
            "description": "Creates, changes, or deletes a resource record set, which contains authoritative\nDNS information for a specified domain name or subdomain name. For example, you\ncan use ChangeResourceRecordSets to create a resource record set that routes\ntraffic for test.example.com to a web server that has an IP address of\n192.0.2.44.\n\n Change Batches and Transactional Changes \n\nThe request body must include a document with a ChangeResourceRecordSetsRequest \nelement. The request body contains a list of change items, known as a change\nbatch. Change batches are considered transactional changes. When using the\nAmazon Route 53 API to change resource record sets, Route 53 either makes all or\nnone of the changes in a change batch request. This ensures that Route 53 never\npartially implements the intended changes to the resource record sets in a\nhosted zone. \n\nFor example, a change batch request that deletes the CNAME record for\nwww.example.com and creates an alias resource record set for www.example.com.\nRoute 53 deletes the first resource record set and creates the second resource\nrecord set in a single operation. If either the DELETE or the CREATE action\nfails, then both changes (plus any other changes in the batch) fail, and the\noriginal CNAME record continues to exist.\n\nDue to the nature of transactional changes, you can't delete the same resource\nrecord set more than once in a single change batch. If you attempt to delete the\nsame change batch more than once, Route 53 returns an InvalidChangeBatch error.\n\n Traffic Flow \n\nTo create resource record sets for complex routing configurations, use either\nthe traffic flow visual editor in the Route 53 console or the API actions for\ntraffic policies and traffic policy instances. Save the configuration as a\ntraffic policy, then associate the traffic policy with one or more domain names\n(such as example.com) or subdomain names (such as www.example.com), in the same\nhosted zone or in multiple hosted zones. You can roll back the updates if the\nnew configuration isn't performing as expected. For more information, see Using\nTraffic Flow to Route DNS Traffic\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic-flow.html] in\nthe Amazon Route 53 Developer Guide.\n\n Create, Delete, and Upsert \n\nUse ChangeResourceRecordsSetsRequest to perform the following actions:\n\n *   CREATE: Creates a resource record set that has the specified values.\n   \n   \n *   DELETE: Deletes an existing resource record set that has the specified\n   values.\n   \n   \n *   UPSERT: If a resource record set does not already exist, AWS creates it. If\n   a resource set does exist, Route 53 updates it with the values in the\n   request. \n   \n   \n\n Syntaxes for Creating, Updating, and Deleting Resource Record Sets \n\nThe syntax for a request depends on the type of resource record set that you\nwant to create, delete, or update, such as weighted, alias, or failover. The XML\nelements in your request must appear in the order listed in the syntax. \n\nFor an example for each type of resource record set, see \"Examples.\"\n\nDon't refer to the syntax in the \"Parameter Syntax\" section, which includes all\nof the elements for every kind of resource record set that you can create,\ndelete, or update by using ChangeResourceRecordSets. \n\n Change Propagation to Route 53 DNS Servers \n\nWhen you submit a ChangeResourceRecordSets request, Route 53 propagates your\nchanges to all of the Route 53 authoritative DNS servers. While your changes are\npropagating, GetChange returns a status of PENDING. When propagation is\ncomplete, GetChange returns a status of INSYNC. Changes generally propagate to\nall Route 53 name servers within 60 seconds. For more information, see GetChange\n.\n\n Limits on ChangeResourceRecordSets Requests \n\nFor information about the limits on a ChangeResourceRecordSets request, see \nLimits\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html] \nin the Amazon Route 53 Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ChangeResourceRecordSets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHostedZoneCount": {
            "main": "./lib/actions/GetHostedZoneCount.js",
            "title": "GetHostedZoneCount",
            "description": "Retrieves the number of hosted zones that are associated with the current AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHostedZoneCount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetHostedZoneLimit": {
            "main": "./lib/actions/GetHostedZoneLimit.js",
            "title": "GetHostedZoneLimit",
            "description": "Gets the specified limit for a specified hosted zone, for example, the maximum\nnumber of records that you can create in the hosted zone. \n\nFor the default limit, see Limits\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html] \nin the Amazon Route 53 Developer Guide. To request a higher limit, open a case\n[https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&limitType=service-code-route53]\n.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetHostedZoneLimit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListHostedZonesByName": {
            "main": "./lib/actions/ListHostedZonesByName.js",
            "title": "ListHostedZonesByName",
            "description": "Retrieves a list of your hosted zones in lexicographic order. The response\nincludes a HostedZones child element for each hosted zone created by the current\nAWS account. \n\n ListHostedZonesByName sorts hosted zones by name with the labels reversed. For\nexample:\n\n com.example.www. \n\nNote the trailing dot, which can change the sort order in some circumstances.\n\nIf the domain name includes escape characters or Punycode, ListHostedZonesByName \nalphabetizes the domain name using the escaped or Punycoded value, which is the\nformat that Amazon Route 53 saves in its database. For example, to create a\nhosted zone for example.com, you specify ex\\344mple.com for the domain name. \nListHostedZonesByName alphabetizes it as:\n\n com.ex\\344mple. \n\nThe labels are reversed and alphabetized using the escaped value. For more\ninformation about valid domain name formats, including internationalized domain\nnames, see DNS Domain Name Format\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html] \nin the Amazon Route 53 Developer Guide.\n\nRoute 53 returns up to 100 items in each response. If you have a lot of hosted\nzones, use the MaxItems parameter to list them in groups of up to 100. The\nresponse includes values that help navigate from one group of MaxItems hosted\nzones to the next:\n\n *  The DNSName and HostedZoneId elements in the response contain the values, if\n   any, specified for the dnsname and hostedzoneid parameters in the request\n   that produced the current response.\n   \n   \n *  The MaxItems element in the response contains the value, if any, that you\n   specified for the maxitems parameter in the request that produced the current\n   response.\n   \n   \n *  If the value of IsTruncated in the response is true, there are more hosted\n   zones associated with the current AWS account. \n   \n   If IsTruncated is false, this response includes the last hosted zone that is\n   associated with the current account. The NextDNSName element and \n   NextHostedZoneId elements are omitted from the response.\n   \n   \n *  The NextDNSName and NextHostedZoneId elements in the response contain the\n   domain name and the hosted zone ID of the next hosted zone that is associated\n   with the current AWS account. If you want to list more hosted zones, make\n   another call to ListHostedZonesByName, and specify the value of NextDNSName \n   and NextHostedZoneId in the dnsname and hostedzoneid parameters,\n   respectively.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListHostedZonesByName.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListQueryLoggingConfigs": {
            "main": "./lib/actions/ListQueryLoggingConfigs.js",
            "title": "ListQueryLoggingConfigs",
            "description": "Lists the configurations for DNS query logging that are associated with the\ncurrent AWS account or the configuration that is associated with a specified\nhosted zone.\n\nFor more information about DNS query logs, see CreateQueryLoggingConfig.\nAdditional information, including the format of DNS query logs, appears in \nLogging DNS Queries\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html] in\nthe Amazon Route 53 Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListQueryLoggingConfigs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateQueryLoggingConfig": {
            "main": "./lib/actions/CreateQueryLoggingConfig.js",
            "title": "CreateQueryLoggingConfig",
            "description": "Creates a configuration for DNS query logging. After you create a query logging\nconfiguration, Amazon Route 53 begins to publish log data to an Amazon\nCloudWatch Logs log group.\n\nDNS query logs contain information about the queries that Route 53 receives for\na specified public hosted zone, such as the following:\n\n *  Route 53 edge location that responded to the DNS query\n   \n   \n *  Domain or subdomain that was requested\n   \n   \n *  DNS record type, such as A or AAAA\n   \n   \n *  DNS response code, such as NoError or ServFail \n   \n   \n\nLog Group and Resource Policy Before you create a query logging configuration,\nperform the following operations.\n\nIf you create a query logging configuration using the Route 53 console, Route 53\nperforms these operations automatically.\n\n 1.  Create a CloudWatch Logs log group, and make note of the ARN, which you\n    specify when you create a query logging configuration. Note the following:\n    \n     *  You must create the log group in the us-east-1 region.\n       \n       \n     *  You must use the same AWS account to create the log group and the hosted\n       zone that you want to configure query logging for.\n       \n       \n     *  When you create log groups for query logging, we recommend that you use\n       a consistent prefix, for example:\n       \n        /aws/route53/hosted zone name \n       \n       In the next step, you'll create a resource policy, which controls access\n       to one or more log groups and the associated AWS resources, such as Route\n       53 hosted zones. There's a limit on the number of resource policies that\n       you can create, so we recommend that you use a consistent prefix so you\n       can use the same resource policy for all the log groups that you create\n       for query logging.\n       \n       \n    \n    \n 2.  Create a CloudWatch Logs resource policy, and give it the permissions that\n    Route 53 needs to create log streams and to send query logs to log streams.\n    For the value of Resource, specify the ARN for the log group that you\n    created in the previous step. To use the same resource policy for all the\n    CloudWatch Logs log groups that you created for query logging\n    configurations, replace the hosted zone name with *, for example:\n    \n     arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/* \n    \n    You can't use the CloudWatch console to create or edit a resource policy.\n    You must use the CloudWatch API, one of the AWS SDKs, or the AWS CLI.\n    \n    \n\nLog Streams and Edge Locations When Route 53 finishes creating the configuration\nfor DNS query logging, it does the following:\n\n *  Creates a log stream for an edge location the first time that the edge\n   location responds to DNS queries for the specified hosted zone. That log\n   stream is used to log all queries that Route 53 responds to for that edge\n   location.\n   \n   \n *  Begins to send query logs to the applicable log stream.\n   \n   \n\nThe name of each log stream is in the following format:\n\n hosted zone ID/edge location code \n\nThe edge location code is a three-letter code and an arbitrarily assigned\nnumber, for example, DFW3. The three-letter code typically corresponds with the\nInternational Air Transport Association airport code for an airport near the\nedge location. (These abbreviations might change in the future.) For a list of\nedge locations, see \"The Route 53 Global Network\" on the Route 53 Product\nDetails [http://aws.amazon.com/route53/details/] page.\n\nQueries That Are Logged Query logs contain only the queries that DNS resolvers\nforward to Route 53. If a DNS resolver has already cached the response to a\nquery (such as the IP address for a load balancer for example.com), the resolver\nwill continue to return the cached response. It doesn't forward another query to\nRoute 53 until the TTL for the corresponding resource record set expires.\nDepending on how many DNS queries are submitted for a resource record set, and\ndepending on the TTL for that resource record set, query logs might contain\ninformation about only one query out of every several thousand queries that are\nsubmitted to DNS. For more information about how DNS works, see Routing Internet\nTraffic to Your Website or Web Application\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html] \nin the Amazon Route 53 Developer Guide.\n\nLog File Format For a list of the values in each query log and the format of\neach value, see Logging DNS Queries\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html] in\nthe Amazon Route 53 Developer Guide.\n\nPricing For information about charges for query logs, see Amazon CloudWatch Pricing\n[http://aws.amazon.com/cloudwatch/pricing/].\n\nHow to Stop Logging If you want Route 53 to stop sending query logs to\nCloudWatch Logs, delete the query logging configuration. For more information,\nsee DeleteQueryLoggingConfig.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateQueryLoggingConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteQueryLoggingConfig": {
            "main": "./lib/actions/DeleteQueryLoggingConfig.js",
            "title": "DeleteQueryLoggingConfig",
            "description": "Deletes a configuration for DNS query logging. If you delete a configuration,\nAmazon Route 53 stops sending query logs to CloudWatch Logs. Route 53 doesn't\ndelete any logs that are already in CloudWatch Logs.\n\nFor more information about DNS query logs, see CreateQueryLoggingConfig.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteQueryLoggingConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetQueryLoggingConfig": {
            "main": "./lib/actions/GetQueryLoggingConfig.js",
            "title": "GetQueryLoggingConfig",
            "description": "Gets information about a specified configuration for DNS query logging.\n\nFor more information about DNS query logs, see CreateQueryLoggingConfig and \nLogging DNS Queries\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetQueryLoggingConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReusableDelegationSetLimit": {
            "main": "./lib/actions/GetReusableDelegationSetLimit.js",
            "title": "GetReusableDelegationSetLimit",
            "description": "Gets the maximum number of hosted zones that you can associate with the\nspecified reusable delegation set.\n\nFor the default limit, see Limits\n[http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html] \nin the Amazon Route 53 Developer Guide. To request a higher limit, open a case\n[https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&limitType=service-code-route53]\n.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReusableDelegationSetLimit.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResources": {
            "main": "./lib/actions/ListTagsForResources.js",
            "title": "ListTagsForResources",
            "description": "Lists tags for up to 10 health checks or hosted zones.\n\nFor information about using tags for cost allocation, see Using Cost Allocation\nTags\n[http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html] \nin the AWS Billing and Cost Management User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResources.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResource": {
            "main": "./lib/actions/ListTagsForResource.js",
            "title": "ListTagsForResource",
            "description": "Lists tags for one health check or hosted zone. \n\nFor information about using tags for cost allocation, see Using Cost Allocation\nTags\n[http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html] \nin the AWS Billing and Cost Management User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ChangeTagsForResource": {
            "main": "./lib/actions/ChangeTagsForResource.js",
            "title": "ChangeTagsForResource",
            "description": "Adds, edits, or deletes tags for a health check or a hosted zone.\n\nFor information about using tags for cost allocation, see Using Cost Allocation\nTags\n[http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html] \nin the AWS Billing and Cost Management User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ChangeTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TestDNSAnswer": {
            "main": "./lib/actions/TestDNSAnswer.js",
            "title": "TestDNSAnswer",
            "description": "Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TestDNSAnswer.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTrafficPolicies": {
            "main": "./lib/actions/ListTrafficPolicies.js",
            "title": "ListTrafficPolicies",
            "description": "Gets information about the latest version for every traffic policy that is associated with the current AWS account. Policies are listed in the order that they were created in. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTrafficPolicies.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTrafficPolicyVersions": {
            "main": "./lib/actions/ListTrafficPolicyVersions.js",
            "title": "ListTrafficPolicyVersions",
            "description": "Gets information about all of the versions for a specified traffic policy.\n\nTraffic policy versions are listed in numerical order by VersionNumber.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTrafficPolicyVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTrafficPolicy": {
            "main": "./lib/actions/CreateTrafficPolicy.js",
            "title": "CreateTrafficPolicy",
            "description": "Creates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTrafficPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTrafficPolicyVersion": {
            "main": "./lib/actions/CreateTrafficPolicyVersion.js",
            "title": "CreateTrafficPolicyVersion",
            "description": "Creates a new version of an existing traffic policy. When you create a new version of a traffic policy, you specify the ID of the traffic policy that you want to update and a JSON-formatted document that describes the new version. You use traffic policies to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com). You can create a maximum of 1000 versions of a traffic policy. If you reach the limit and need to create another version, you'll need to start a new traffic policy.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTrafficPolicyVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTrafficPolicy": {
            "main": "./lib/actions/DeleteTrafficPolicy.js",
            "title": "DeleteTrafficPolicy",
            "description": "Deletes a traffic policy.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTrafficPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTrafficPolicy": {
            "main": "./lib/actions/GetTrafficPolicy.js",
            "title": "GetTrafficPolicy",
            "description": "Gets information about a specific traffic policy version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTrafficPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateTrafficPolicyComment": {
            "main": "./lib/actions/UpdateTrafficPolicyComment.js",
            "title": "UpdateTrafficPolicyComment",
            "description": "Updates the comment for a specified traffic policy version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateTrafficPolicyComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTrafficPolicyInstance": {
            "main": "./lib/actions/CreateTrafficPolicyInstance.js",
            "title": "CreateTrafficPolicyInstance",
            "description": "Creates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version. In addition, <code>CreateTrafficPolicyInstance</code> associates the resource record sets with a specified domain name (such as example.com) or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries for the domain or subdomain name by using the resource record sets that <code>CreateTrafficPolicyInstance</code> created.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTrafficPolicyInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTrafficPolicyInstance": {
            "main": "./lib/actions/DeleteTrafficPolicyInstance.js",
            "title": "DeleteTrafficPolicyInstance",
            "description": "Deletes a traffic policy instance and all of the resource record sets that\nAmazon Route 53 created when you created the instance.\n\nIn the Route 53 console, traffic policy instances are known as policy records.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTrafficPolicyInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTrafficPolicyInstance": {
            "main": "./lib/actions/GetTrafficPolicyInstance.js",
            "title": "GetTrafficPolicyInstance",
            "description": "Gets information about a specified traffic policy instance.\n\nAfter you submit a CreateTrafficPolicyInstance or an UpdateTrafficPolicyInstance \nrequest, there's a brief delay while Amazon Route 53 creates the resource record\nsets that are specified in the traffic policy definition. For more information,\nsee the State response element.\n\nIn the Route 53 console, traffic policy instances are known as policy records.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTrafficPolicyInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateTrafficPolicyInstance": {
            "main": "./lib/actions/UpdateTrafficPolicyInstance.js",
            "title": "UpdateTrafficPolicyInstance",
            "description": "Updates the resource record sets in a specified hosted zone that were created\nbased on the settings in a specified traffic policy version.\n\nWhen you update a traffic policy instance, Amazon Route 53 continues to respond\nto DNS queries for the root resource record set name (such as example.com) while\nit replaces one group of resource record sets with another. Route 53 performs\nthe following operations:\n\n 1.  Route 53 creates a new group of resource record sets based on the specified\n    traffic policy. This is true regardless of how significant the differences\n    are between the existing resource record sets and the new resource record\n    sets. \n    \n    \n 2.  When all of the new resource record sets have been created, Route 53 starts\n    to respond to DNS queries for the root resource record set name (such as\n    example.com) by using the new resource record sets.\n    \n    \n 3.  Route 53 deletes the old group of resource record sets that are associated\n    with the root resource record set name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateTrafficPolicyInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTrafficPolicyInstanceCount": {
            "main": "./lib/actions/GetTrafficPolicyInstanceCount.js",
            "title": "GetTrafficPolicyInstanceCount",
            "description": "Gets the number of traffic policy instances that are associated with the current AWS account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTrafficPolicyInstanceCount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTrafficPolicyInstances": {
            "main": "./lib/actions/ListTrafficPolicyInstances.js",
            "title": "ListTrafficPolicyInstances",
            "description": "Gets information about the traffic policy instances that you created by using\nthe current AWS account.\n\nAfter you submit an UpdateTrafficPolicyInstance request, there's a brief delay\nwhile Amazon Route 53 creates the resource record sets that are specified in the\ntraffic policy definition. For more information, see the State response element.\n\nRoute 53 returns a maximum of 100 items in each response. If you have a lot of\ntraffic policy instances, you can use the MaxItems parameter to list them in\ngroups of up to 100.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTrafficPolicyInstances.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTrafficPolicyInstancesByHostedZone": {
            "main": "./lib/actions/ListTrafficPolicyInstancesByHostedZone.js",
            "title": "ListTrafficPolicyInstancesByHostedZone",
            "description": "Gets information about the traffic policy instances that you created in a\nspecified hosted zone.\n\nAfter you submit a CreateTrafficPolicyInstance or an UpdateTrafficPolicyInstance \nrequest, there's a brief delay while Amazon Route 53 creates the resource record\nsets that are specified in the traffic policy definition. For more information,\nsee the State response element.\n\nRoute 53 returns a maximum of 100 items in each response. If you have a lot of\ntraffic policy instances, you can use the MaxItems parameter to list them in\ngroups of up to 100.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTrafficPolicyInstancesByHostedZone.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTrafficPolicyInstancesByPolicy": {
            "main": "./lib/actions/ListTrafficPolicyInstancesByPolicy.js",
            "title": "ListTrafficPolicyInstancesByPolicy",
            "description": "Gets information about the traffic policy instances that you created by using a\nspecify traffic policy version.\n\nAfter you submit a CreateTrafficPolicyInstance or an UpdateTrafficPolicyInstance \nrequest, there's a brief delay while Amazon Route 53 creates the resource record\nsets that are specified in the traffic policy definition. For more information,\nsee the State response element.\n\nRoute 53 returns a maximum of 100 items in each response. If you have a lot of\ntraffic policy instances, you can use the MaxItems parameter to list them in\ngroups of up to 100.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTrafficPolicyInstancesByPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}